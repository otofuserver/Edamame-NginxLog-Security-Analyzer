name: Python Lint & Test

on:
  push:
    paths:
      - '**.py'

jobs:
  lint-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install mysql-connector-python cryptography

      - name: Lint (pycodestyle)
        run: |
          pip install pycodestyle
          # W605（冗長なエスケープ）を無視して実行
          pycodestyle . --max-line-length=120 --ignore=W605

      - name: Syntax check (compileall)
        run: |
          python -m compileall .

      - name: Run unittest if exists
        run: |
          if ls test_*.py 1> /dev/null 2>&1; then
            python -m unittest discover -s . -p "test_*.py"
          else
            echo "No unittest files found, skipping tests."
          fi

      - name: Check main scripts import
        run: |
          python -c "import nginx_log_to_mysql"
          python -c "import setup_secure_config"

      - name: Test setup_secure_config.py
        run: |
          set -e
          rm -f secret.key db_config.enc
          export PYTHONUNBUFFERED=1

          export TEST_MYSQL_HOST="testhost"
          export TEST_MYSQL_USER="testuser"
          export TEST_MYSQL_PASS="testpass"
          export TEST_MYSQL_DB="testdb"

          echo "Running setup_secure_config.py..."
          {
            echo "$TEST_MYSQL_HOST"
            echo "$TEST_MYSQL_USER"
            echo "$TEST_MYSQL_DB"
          } | python setup_secure_config.py <<< "$TEST_MYSQL_PASS"
          echo "✅ setup_secure_config.py executed successfully."

          test -f secret.key && echo "✅ secret.key created"
          test -f db_config.enc && echo "✅ db_config.enc created"

      - name: Check encrypted config
        run: |
          echo "Running config check..."
          python .github/workflows/check_config.py

      - name: Upload encrypted config artifacts
        uses: actions/upload-artifact@v4
        with:
          name: secure-config
          path: |
            secret.key
            db_config.enc
